---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: scratchmyback-pull-request
  annotations:
    pipelinesascode.tekton.dev/on-comment: "^/assign[ ].*"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  pipelineSpec:
    tasks:
      - name: assign
        displayName: Assign a user to a Pull Request
        taskSpec:
          steps:
            - name: assign
              image: registry.access.redhat.com/ubi9/ubi
              env:
                - name: GITHUB_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: "{{ git_auth_secret }}"
                      key: "git-provider-token"
              script: |
                #!/usr/bin/env python3
                import os
                import re
                import requests
                import sys

                GITHUB_TOKEN = os.getenv("GITHUB_TOKEN")
                API_URL = f"https://api.github.com/repos/{{ repo_owner }}/{{ repo_name }}/issues/{{ pull_request_number }}/assignees"
                HEADERS = {
                    "Authorization": f"Bearer {GITHUB_TOKEN}",
                    "Accept": "application/vnd.github.v3+json"
                }

                match = re.match(r"^/assign\s+(.*)", """{{ trigger_comment }}""")
                if not match:
                    print("No valid /assign command found, comment is: {{ trigger_comment }}", file=sys.stderr)
                    sys.exit(1)

                assignees = match.group(1).split()
                response = requests.post(API_URL, json={"assignees": assignees}, headers=HEADERS)

                if response.status_code == 201:
                    print(f"✅ Successfully assigned: {', '.join(assignees)}")
                else:
                    print(f"❌ Failed to assign: {API_URL} {','.join(assignees)} {response.status_code} - {response.text}", file=sys.stderr)
                    sys.exit(1)
