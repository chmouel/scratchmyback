---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: scratchmyback-pull-request
  annotations:
    # pipelinesascode.tekton.dev/on-event: "[pull_request]"
    # pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/max-keep-runs: "1"
    pipelinesascode.tekton.dev/caching: |
      - task: task
        fetch_after: git-clone
        save_before: noop-task
        patterns:
          - "**go.mod"
          - "**go.sum"
        cache-path: $(workspaces.cache.path)/go-build-cache
        target: oci://image-registry.openshift-image-registry.svc:5000/$(context.pipelineRun.namespace)/caching-go:{{hash}}
spec:
  params:
    - name: repo_url
      value: "{{ repo_url }}"
    - name: revision
      value: "{{ revision }}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
    workspaces:
      - name: source
      - name: cache
    tasks:
      - name: task
        displayName: checkout build and test
        workspaces:
          - name: source
            workspace: source
          - name: cache
            workspace: cache
        taskSpec:
          workspaces:
            - name: source
            - name: cache
          steps:
            - name: git-clone
              ref:
                resolver: http
                params:
                  - name: url
                    value: https://raw.githubusercontent.com/tektoncd/catalog/main/stepaction/git-clone/0.1/git-clone.yaml
              params:
                - name: output-path
                  value: $(workspaces.source.path)
                - name: url
                  value: "$(params.repo_url)"
                - name: revision
                  value: "$(params.revision)"
            - name: build
              image: golang:1.22
              env:
                - name: GOCACHE
                  value: $(workspaces.cache.path)/go-build-cache/cache
                - name: GOMODCACHE
                  value: $(workspaces.cache.path)/go-build-cache/mod
              workingDir: $(workspaces.source.path)
              script: |
                start_time=$(date +%s)
                git config --global --add safe.directory $(workspaces.source.path)
                go build -v -o /dev/null ./...
                end_time=$(date +%s)
                elapsed_time=$((end_time - start_time))
                elapsed_time_minutes=$((elapsed_time / 60))
                elapsed_time_seconds=$((elapsed_time % 60))

                echo "Binary built successfully in ${elapsed_time_minutes} minutes and ${elapsed_time_seconds} seconds"
            - name: noop-task
              image: registry.access.redhat.com/ubi9/ubi-micro
              env:
                - name: GOCACHE
                  value: $(workspaces.cache.path)/go-build-cache/cache
                - name: GOMODCACHE
                  value: $(workspaces.cache.path)/go-build-cache/mod
              script: |
                du -sh ${GOCACHE} ${GOMODCACHE}
  workspaces:
    - name: source
      emptyDir: {}
    - name: cache
      emptyDir: {}
