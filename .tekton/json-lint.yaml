---
apiVersion: tekton.dev/v1
kind: PipelineRun
metadata:
  name: json-linter
  description: "This PipelineRun lints all JSON files in the repository using jsonlint."
  annotations:
    # This PipelineRun will be triggered on any pull request that targets the main branch.
    pipelinesascode.tekton.dev/on-event: "[pull_request]"
    pipelinesascode.tekton.dev/on-target-branch: "[main]"
    pipelinesascode.tekton.dev/task: git-clone

    # It will only run if there are changes to any file with a .json extension.
    pipelinesascode.tekton.dev/on-path-change: "[**/*.json]"
    pipelinesascode.tekton.dev/max-keep-runs: "5"
spec:
  params:
    - name: repo_url
      value: "{{repo_url}}"
    - name: revision
      value: "{{revision}}"
  pipelineSpec:
    params:
      - name: repo_url
      - name: revision
    workspaces:
      - name: source
      - name: basic-auth
    tasks:
      - name: fetch-repository
        taskRef:
          name: git-clone
        workspaces:
          - name: output
            workspace: source
          - name: basic-auth
            workspace: basic-auth
        params:
          - name: url
            value: $(params.repo_url)
          - name: revision
            value: $(params.revision)
      - name: lint-json-files
        runAfter:
          - fetch-repository
        workspaces:
          - name: source
            workspace: source
        taskSpec:
          workspaces:
            - name: source
          steps:
            - name: lint-json
              image: "ghcr.io/hadolint/hadolint:latest-alpine"
              workingDir: $(workspaces.source.path)
              script: |
                set -e
                echo "--- Installing and running jsonlint ---"
                apk add --no-cache jsonlint
                jsonlint --compact .
  workspaces:
    - name: source
      volumeClaimTemplate:
        spec:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 1Gi
    - name: basic-auth
      secret:
        secretName: "{{ git_auth_secret }}"
